services:
  kafka:
    image: "bitnami/kafka"
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092

  spark-master:
    image: "bitnami/spark:latest"
    container_name: spark-master
    volumes:
      - ./src:/opt/bitnami/spark/thousand-wishes
      - ./jars/spark-sql-kafka-0-10_2.12-3.5.5.jar:/opt/bitnami/spark/jars/spark-sql-kafka-0-10_2.12-3.5.5.jar
      - ./jars/kafka-clients-3.5.1.jar:/opt/bitnami/spark/jars/kafka-clients-3.5.1.jar
      - ./jars/spark-streaming-kafka-0-10-assembly_2.12-3.5.5.jar:/opt/bitnami/spark/jars/spark-streaming-kafka-0-10-assembly_2.12-3.5.5.jar
      - ./jars/commons-pool2-2.11.1.jar:/opt/bitnami/spark/jars/commons-pool2-2.11.1.jar
      - ./jars/postgresql-42.6.0.jar:/opt/bitnami/spark/jars/postgresql-42.6.0.jar

    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - "8080:8080"
      - "8000:8000"

  spark-worker:
    image: "bitnami/spark:latest"
    container_name: spark-worker
    volumes:
      - ./jars/spark-sql-kafka-0-10_2.12-3.5.5.jar:/opt/bitnami/spark/jars/spark-sql-kafka-0-10_2.12-3.5.5.jar
      - ./jars/kafka-clients-3.5.1.jar:/opt/bitnami/spark/jars/kafka-clients-3.5.1.jar
      - ./jars/spark-streaming-kafka-0-10-assembly_2.12-3.5.5.jar:/opt/bitnami/spark/jars/spark-streaming-kafka-0-10-assembly_2.12-3.5.5.jar
      - ./jars/commons-pool2-2.11.1.jar:/opt/bitnami/spark/jars/commons-pool2-2.11.1.jar
      - ./jars/postgresql-42.6.0.jar:/opt/bitnami/spark/jars/postgresql-42.6.0.jar
      - ./logs:/opt/bitnami/spark/thousand-wishes/logs
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark

  producer:
    # build:
    #   context: ./containers/producer
    #   dockerfile: Dockerfile
    image: "producer:v1"
    container_name: producer
    volumes:
      - ./containers/producer/producer.py:/app/producer.py
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka
    restart: on-failure

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000" # API
      - "9001:9001" # Dashboard
    volumes:
      - ./data:/data
      - ./create-buckets.sh:/usr/bin/create-buckets.sh
    entrypoint: /usr/bin/create-buckets.sh
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: streaming_analytics
    ports:
      - "5432:5432"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=pass
